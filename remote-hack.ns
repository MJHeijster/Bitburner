/** @param {NS} ns **/
export async function main(ns) {
    var originServer = ns.args[0];
    if (!originServer)
    {
      originServer = "home"
    }
    ns.tprint("Origin server: "+ originServer)
    const targets = ns.scan();

    for (let i = 0; i < targets.length; i++) {
        if (targets[i] != "home" && targets[i] != "moonraven" && targets[i] != originServer && targets[i] != "darkweb") {
            var host = targets[i];
            ns.killall(host)
            //ns.toast("target: " + host, "info");
            var files = ["hack.ns", "remote-hack.ns"]
            await ns.scp(files, originServer, host)
            if (!ns.hasRootAccess(host)) {
                try {
                    if (ns.fileExists('BruteSSH.exe', 'home')) {
                    ns.brutessh(host);
                }
                if (ns.fileExists('FTPCrack.exe', 'home')) {
                    ns.ftpcrack(host);
                }
                if (ns.fileExists('relaySMTP.exe', 'home')) {
                    ns.relaysmtp(host);
                }
                if (ns.fileExists('HTTPWorm.exe', 'home')) {
                    ns.httpworm(host);
                }
                if (ns.fileExists('SQLInject.exe', 'home')) {
                    ns.sqlinject(host);
                }
                    ns.nuke(host);
                    ns.tprint('Root enabled on ', host);
                } catch {
                    ns.tprint('Root failed on ', host);
                }
            }
            
            ns.tprint("Executing hack on: "+ host)
            //await ns.exec("remote-hack.ns", host, 1, originServer);
            
            var threads = Math.floor(ns.getServerMaxRam(host) / ns.getScriptRam('hack.ns'))
            ns.tprint("Host: "+ host +" threads: " + threads)
            await ns.exec("hack.ns", host, threads, host);
        }
    }
}